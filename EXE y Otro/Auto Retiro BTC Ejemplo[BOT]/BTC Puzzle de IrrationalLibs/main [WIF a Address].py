import re

from bitcoinx import pkWifToAddress

# El texto original proporcionado
text = """T9U3V8W2Y0Z5R4O1B9M6J2K7H0L3X1Q5N8P7A4C9D3E6F2G8I7S0T4U5V9W3Y6Z2R7O0B4M8J1K3H6L2X0Q4N9P1A5C7D8E2F6G3I1S9T7U0V4W8Y5Z3R6O2B1M7J9K4H0L5X2Q8N3P6A1C4D7E9F5G2I8S3T6U2V7W0Y4Z9R501B0M3J6K8H2L1X7Q9N4P0A2C5D3E8F6G4I0S7T1U9V5W2Y8Z6R3O9B4M1J7K0H3L6X5Q2N8P1A9C4D2E7F0G3I6S8T5U3V0W4Y7Z2R1O6B5M0J2K9H7L3X1Q4N8P6A3C1D5E2F9G7I4S0T6U8V3W5Y1Z9R2O7B4M6J3K1H8L6X2Q5N9P7A4C8D6E3F1G5I2S7T0U4V9W6Y3Z1R8O5B2M7J0K6H3L9X4Q1N5P8A2C7D4E0F6G8I3S1T5U2V7W9Y0Z4R603B1M8J5K2H7L4X0Q3N9P6A1C5D8E2F7G4I9S6T3U0V5W2Y8Z7R4O1B3M0J6K9H2L5X1Q7N4P0A8C3D6E5F1G2I7S9T8U4V0W3Y5Z2R6O4B1M7J3K0H5L2X9Q6N1P8A2C4D7E3F9G5I0S6T1U5V2W8Y7Z4R0O3B9M6J2K1H4L7X3Q0N5P8A1C6D2E4F7G9I3S8T5U0V2W6Y1Z4R7O9B3M5J0K2H6L4X8Q1N3P7A5C2D9E6F0G4I7S1T3U8V5W2Y6Z6R4O2B6M9J3K7H0L5X2Q1N4P8A3C6D5E9F7G2I0S4T8U1V3W5Y7Z9R6O2B4M1J5K0H3L6X4Q8N2P7A0C3D6E2F9G5I1S7T4U8V0W2Y6Z3R5O9B2M4J1K7H3L0X5Q6N8P1A9C4D2E7F3G6I0S5T1U4V8W2Y7Z6R3O0B9M5J2K1H4L7X0Q3N6P8A2C1D5E9F4G7I3S6T9U2V5W8Y1Z4R7O3B2M6J0K9H5L3X1Q4N8P7A0C2D6E3F1G5I9S4T7U5V2W0Y6Z3R8O1B4M2J7K3H0L6X5Q1N9P8A3C2D5E7F4G6I0S3T8U1V7W2Y5Z9R6O4B0M3J1K2H7L4X0Q6N5P8A1C9D3E6F2G5I7S4T0U3V2W8Y6
"""

# Filtrar y procesar los WIF
wifs = []
for line in text.splitlines():
    # Buscar WIF que comiencen con 'K' o 'L' y tengan exactamente 52 caracteres
    wifs.extend(re.findall(r'([KL][A-Z0-9]{51})', line))

# Función para verificar si el WIF es válido
def is_valid_wif(wif):
    # Eliminar los caracteres no permitidos '0', 'I', 'O'
    wif_clean = wif.translate(str.maketrans('', '', '0IO'))
    
    # Verificar si la longitud del WIF limpio es correcta
    if len(wif_clean) != 52:
        return False
    
    # Verificar si el WIF limpio contiene caracteres inválidos
    if any(c in wif_clean for c in '0IO'):
        return False
    
    return True

# Mostrar los WIF válidos
for wif in wifs:
    if is_valid_wif(wif):
        # Solo Imprimir los WIF Válidos
        address = pkWifToAddress(wif)
        if address:
            print(f"Address: {address} :: {wif}")